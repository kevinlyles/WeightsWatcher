<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.blizzard.com/wow/ui/ ..\FrameXML\UI.xsd">
	<Script file="config.lua"/>
	<Frame name="ww_borderedFrame" virtual="true">
		<Backdrop edgeFile="Interface\Tooltips\UI-Tooltip-Border" tile="true">
			<EdgeSize>
				<AbsValue val="10"/>
			</EdgeSize>
			<TileSize>
				<AbsValue val="10"/>
			</TileSize>
			<BackgroundInsets>
				<AbsInset left="0" right="0" top="5" bottom="5"/>
			</BackgroundInsets>
		</Backdrop>
	</Frame>
	<Frame name="ww_labeledElement" virtual="true">
		<Anchors>
			<Anchor point="LEFT"/>
			<Anchor point="RIGHT"/>
		</Anchors>
		<Layers>
			<Layer level="ARTWORK">
				<FontString name="$parentLabel" parentKey="label" inherits="GameFontNormalSmall">
					<Anchors>
						<Anchor point="TOPLEFT">
							<Offset>
								<AbsDimension x="5" y="-5"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
	</Frame>
	<Frame name="ww_modifierKeyDropDown" inherits="ww_labeledElement" virtual="true">
		<Size>
			<AbsDimension y="45"/>
		</Size>
		<Frames>
			<Button name="$parentDropdown" parentKey="dropdown" inherits="UIDropDownMenuTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" relativeTo="$parentLabel">
						<Offset>
							<AbsDimension x="-15" y="-3"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						UIDropDownMenu_JustifyText(self, "LEFT")
					</OnLoad>
					<OnShow>
						UIDropDownMenu_Initialize(self, ModifierKeyDropDownInitialize)
						UIDropDownMenu_SetSelectedValue(self, ww_vars.options.tooltip[self:GetText()])
					</OnShow>
				</Scripts>
			</Button>
		</Frames>
	</Frame>
	<FontString name="ww_headerFont" inherits="GameFontNormalLarge" virtual="true">
		<Anchors>
			<Anchor point="TOP">
				<Offset>
					<AbsDimension y="-5"/>
				</Offset>
			</Anchor>
		</Anchors>
	</FontString>
	<Frame name="ww_config" parent="UIParent" hidden="true" frameStrata="HIGH">
		<Size>
			<AbsDimension x="600" y="400"/>
		</Size>
		<Anchors>
			<Anchor point="CENTER"/>
		</Anchors>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture setAllPoints="true">
					<!--Plain black background with 80% alpha-->
					<Color r="0" g="0" b="0" a="0.8"/>
				</Texture>
			</Layer>
		</Layers>
		<Frames>
			<Button name="$parentCloseButton" parentKey="closeButton" inherits="UIPanelCloseButton">
				<Anchors>
					<Anchor point="TOPRIGHT"/>
				</Anchors>
			</Button>
			<Frame name="$parentCalculationOptions" parentKey="calculationOptions" inherits="ww_borderedFrame">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension y="-25"/>
						</Offset>
					</Anchor>
					<Anchor point="BOTTOM"/>
				</Anchors>
				<Size>
					<AbsDimension x="300"/>
				</Size>
				<Layers>
					<Layer level="ARTWORK">
						<FontString name="$parentHeader" parentKey="header" text="Calculation Options" inherits="ww_headerFont"/>
					</Layer>
				</Layers>
				<Frames>
					<Frame name="$parentGemQuality" parentKey="gemQuality" inherits="ww_labeledElement">
						<Anchors>
							<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentHeader"/>
						</Anchors>
						<Size>
							<AbsDimension y="45"/>
						</Size>
						<Frames>
							<Button name="$parentDropdown" parentKey="dropdown" inherits="UIDropDownMenuTemplate">
								<Anchors>
									<Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" relativeTo="$parentLabel">
										<Offset>
											<AbsDimension x="-15" y="-3"/>
										</Offset>
									</Anchor>
								</Anchors>
								<Scripts>
									<OnLoad>
										UIDropDownMenu_SetWidth(self, 200, 15)
										UIDropDownMenu_JustifyText(self, "LEFT")
									</OnLoad>
									<OnShow>
										UIDropDownMenu_Initialize(self, GemQualityDropDownInitialize)
										UIDropDownMenu_SetSelectedValue(self, ww_vars.options.gems.qualityLimit)
									</OnShow>
								</Scripts>
							</Button>
						</Frames>
						<Scripts>
							<OnLoad>
								self.label:SetText("Maximum Ideal Gem Quality:")
							</OnLoad>
						</Scripts>
					</Frame>
					<CheckButton name="$parentUseUEGems" parentKey="useUEGems" inherits="UICheckButtonTemplate" text="Use Unique-Equipped Gems">
						<Size>
							<AbsDimension x="25" y="25"/>
						</Size>
						<Anchors>
							<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentGemQuality"/>
							<Anchor point="LEFT">
								<Offset>
									<AbsDimension x="5"/>
								</Offset>
							</Anchor>
						</Anchors>
						<Scripts>
							<OnClick>
								if self:GetChecked() then
									ww_vars.options.gems.usedTypes["Unique-Equipped"] = true
								else
									ww_vars.options.gems.usedTypes["Unique-Equipped"] = false
								end
								ww_weightIdealCache = setmetatable({}, ww_weightIdealCacheMetatable)
							</OnClick>
							<OnEnter>
								GameTooltip:SetOwner(self,"ANCHOR_RIGHT")
								GameTooltip:AddLine("Consider gems that are Unique-Equipped when finding ideal gems", 1, 1, 1)
								GameTooltip:Show()
							</OnEnter>
							<OnLeave>
								GameTooltip:Hide()
							</OnLeave>
							<OnLoad>
								getglobal(self:GetName() .. "Text"):SetText(self:GetText())
							</OnLoad>
							<OnShow>
								self:SetChecked(ww_vars.options.gems.usedTypes["Unique-Equipped"])
							</OnShow>
						</Scripts>
					</CheckButton>
					<CheckButton name="$parentUseJCOnlyGems" parentKey="useJCOnlyGems" inherits="UICheckButtonTemplate" text="Use Jewelcrafter-Only Gems">
						<Size>
							<AbsDimension x="25" y="25"/>
						</Size>
						<Anchors>
							<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentUseUEGems"/>
							<Anchor point="LEFT">
								<Offset>
									<AbsDimension x="5"/>
								</Offset>
							</Anchor>
						</Anchors>
						<Scripts>
							<OnClick>
								if self:GetChecked() then
									ww_vars.options.gems.usedTypes["Jewelcrafter-Only"] = true
								else
									ww_vars.options.gems.usedTypes["Jewelcrafter-Only"] = false
								end
								ww_weightIdealCache = setmetatable({}, ww_weightIdealCacheMetatable)
							</OnClick>
							<OnEnter>
								GameTooltip:SetOwner(self,"ANCHOR_RIGHT")
								GameTooltip:AddLine("Consider gems that are Jewelcrafter-Only when finding ideal gems", 1, 1, 1)
								GameTooltip:Show()
							</OnEnter>
							<OnLeave>
								GameTooltip:Hide()
							</OnLeave>
							<OnLoad>
								getglobal(self:GetName() .. "Text"):SetText(self:GetText())
							</OnLoad>
							<OnShow>
								self:SetChecked(ww_vars.options.gems.usedTypes["Jewelcrafter-Only"])
							</OnShow>
						</Scripts>
					</CheckButton>
					<CheckButton name="$parentUseProcGems" parentKey="useProcGems" inherits="UICheckButtonTemplate" text="Use Procced Gems">
						<Size>
							<AbsDimension x="25" y="25"/>
						</Size>
						<Anchors>
							<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentUseJCOnlyGems"/>
							<Anchor point="LEFT">
								<Offset>
									<AbsDimension x="5"/>
								</Offset>
							</Anchor>
						</Anchors>
						<Scripts>
							<OnClick>
								if self:GetChecked() then
									ww_vars.options.gems.usedTypes["Procced"] = true
								else
									ww_vars.options.gems.usedTypes["Procced"] = false
								end
								ww_weightIdealCache = setmetatable({}, ww_weightIdealCacheMetatable)
							</OnClick>
							<OnEnter>
								GameTooltip:SetOwner(self,"ANCHOR_RIGHT")
								GameTooltip:AddLine("Consider gems that are created by a proc (i.e. Wrath \"Perfect\" gems) when finding ideal gems", 1, 1, 1)
								GameTooltip:Show()
							</OnEnter>
							<OnLeave>
								GameTooltip:Hide()
							</OnLeave>
							<OnLoad>
								getglobal(self:GetName() .. "Text"):SetText(self:GetText())
							</OnLoad>
							<OnShow>
								self:SetChecked(ww_vars.options.gems.usedTypes["Procced"])
							</OnShow>
						</Scripts>
					</CheckButton>
					<CheckButton name="$parentObeySocketColors" parentKey="obeySocketColors" inherits="UICheckButtonTemplate" text="Obey socket colors">
						<Size>
							<AbsDimension x="25" y="25"/>
						</Size>
						<Anchors>
							<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentUseProcGems"/>
							<Anchor point="LEFT">
								<Offset>
									<AbsDimension x="5"/>
								</Offset>
							</Anchor>
						</Anchors>
						<Scripts>
							<OnClick>
								if self:GetChecked() then
									ww_vars.options.breakSocketColors = false
									self:GetParent().alwaysObeySocketColors:Enable()
								else
									ww_vars.options.breakSocketColors = true
									self:GetParent().alwaysObeySocketColors:Disable()
								end
								ww_weightIdealCache = setmetatable({}, ww_weightIdealCacheMetatable)
							</OnClick>
							<OnEnter>
								GameTooltip:SetOwner(self,"ANCHOR_RIGHT")
								GameTooltip:AddLine("Chooses ideal gems that obey their socket color (even if that gives a lower overall score)", 1, 1, 1)
								GameTooltip:Show()
							</OnEnter>
							<OnLeave>
								GameTooltip:Hide()
							</OnLeave>
							<OnLoad>
								getglobal(self:GetName() .. "Text"):SetText(self:GetText())
							</OnLoad>
							<OnShow>
								self:SetChecked(not ww_vars.options.breakSocketColors)
							</OnShow>
						</Scripts>
					</CheckButton>
					<CheckButton name="$parentAlwaysObeySocketColors" parentKey="alwaysObeySocketColors" inherits="UICheckButtonTemplate" text="Even if the socket bonus is worthless">
						<Size>
							<AbsDimension x="25" y="25"/>
						</Size>
						<Anchors>
							<Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" relativeTo="$parentObeySocketColors">
								<Offset>
									<AbsDimension x="20"/>
								</Offset>
							</Anchor>
						</Anchors>
						<Scripts>
							<OnClick>
								if self:GetChecked() then
									ww_vars.options.neverBreakSocketColors = true
								else
									ww_vars.options.neverBreakSocketColors = false
								end
								ww_weightIdealCache = setmetatable({}, ww_weightIdealCacheMetatable)
							</OnClick>
							<OnDisable>
								self.text:SetTextColor(0.5, 0.5, 0.5)
							</OnDisable>
							<OnEnable>
								self.text:SetTextColor(1, 0.82, 0)
							</OnEnable>
							<OnEnter>
								GameTooltip:SetOwner(self,"ANCHOR_RIGHT")
								GameTooltip:AddLine("Forces ideal gems to obey their socket color (even if the socket bonus has a 0 or negative score for that weight)", 1, 1, 1)
								GameTooltip:Show()
							</OnEnter>
							<OnLeave>
								GameTooltip:Hide()
							</OnLeave>
							<OnLoad>
								self.text = getglobal(self:GetName() .. "Text")
								self.text:SetText(self:GetText())
							</OnLoad>
							<OnShow>
								self:SetChecked(ww_vars.options.neverBreakSocketColors)
								if ww_vars.options.breakSocketColors then
									self:Disable()
								else
									self:Enable()
								end
							</OnShow>
						</Scripts>
					</CheckButton>
					<CheckButton name="$parentNormalizeWeights" parentKey="normalizeWeights" inherits="UICheckButtonTemplate" text="Normalize weights">
						<Size>
							<AbsDimension x="25" y="25"/>
						</Size>
						<Anchors>
							<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentAlwaysObeySocketColors"/>
							<Anchor point="LEFT">
								<Offset>
									<AbsDimension x="5"/>
								</Offset>
							</Anchor>
						</Anchors>
						<Scripts>
							<OnClick>
								if self:GetChecked() then
									ww_vars.options.normalizeWeights = true
								else
									ww_vars.options.normalizeWeights = false
								end
								ww_weightCache = setmetatable({}, ww_weightCacheMetatable)
								ww_weightIdealCache = setmetatable({}, ww_weightIdealCacheMetatable)
							</OnClick>
							<OnEnter>
								GameTooltip:SetOwner(self,"ANCHOR_RIGHT")
								GameTooltip:AddLine("Divides item scores by the total of all stats' values in that weight", 1, 1, 1)
								GameTooltip:Show()
							</OnEnter>
							<OnLeave>
								GameTooltip:Hide()
							</OnLeave>
							<OnLoad>
								getglobal(self:GetName() .. "Text"):SetText(self:GetText())
							</OnLoad>
							<OnShow>
								self:SetChecked(ww_vars.options.normalizeWeights)
							</OnShow>
						</Scripts>
					</CheckButton>
				</Frames>
			</Frame>
			<Frame name="$parentDisplayOptions" parentKey="displayOptions" inherits="ww_borderedFrame">
				<Anchors>
					<Anchor point="TOPLEFT" relativePoint="TOPRIGHT" relativeTo="$parentCalculationOptions"/>
					<Anchor point="BOTTOMRIGHT"/>
				</Anchors>
				<Layers>
					<Layer level="ARTWORK">
						<FontString name="$parentHeader" parentKey="header" text="Display Options" inherits="ww_headerFont"/>
					</Layer>
				</Layers>
				<Frames>
					<Frame name="$parentShowWeights" parentKey="showWeights" inherits="ww_modifierKeyDropDown">
						<Anchors>
							<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentHeader"/>
						</Anchors>
						<Scripts>
							<OnLoad>
								self.label:SetText("Show weights:")
								self.dropdown:SetText("showWeights")
							</OnLoad>
						</Scripts>
					</Frame>
					<Frame name="$parentShowIdealWeights" parentKey="showIdealWeights" inherits="ww_modifierKeyDropDown">
						<Anchors>
							<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentShowWeights"/>
							<Anchor point="LEFT" relativePoint="LEFT" relativeTo="$parentShowWeights">
								<Offset>
									<AbsDimension x="20"/>
								</Offset>
							</Anchor>
						</Anchors>
						<Scripts>
							<OnLoad>
								self.label:SetText("Show ideally-gemmed weights:")
								self.dropdown:SetText("showIdealWeights")
							</OnLoad>
						</Scripts>
					</Frame>
					<Frame name="$parentShowIdealGems" parentKey="showIdealGems" inherits="ww_modifierKeyDropDown">
						<Anchors>
							<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentShowIdealWeights"/>
							<Anchor point="LEFT" relativePoint="LEFT" relativeTo="$parentShowIdealWeights">
								<Offset>
									<AbsDimension x="20"/>
								</Offset>
							</Anchor>
						</Anchors>
						<Scripts>
							<OnLoad>
								self.label:SetText("Show ideal gems:")
								self.dropdown:SetText("showIdealGems")
							</OnLoad>
						</Scripts>
					</Frame>
					<Frame name="$parentShowIdealGemStats" parentKey="showIdealGemStats" inherits="ww_modifierKeyDropDown">
						<Anchors>
							<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentShowIdealGems"/>
							<Anchor point="LEFT" relativePoint="LEFT" relativeTo="$parentShowIdealGems">
								<Offset>
									<AbsDimension x="20"/>
								</Offset>
							</Anchor>
						</Anchors>
						<Scripts>
							<OnLoad>
								self.label:SetText("Show ideal gem stats:")
								self.dropdown:SetText("showIdealGemStats")
							</OnLoad>
						</Scripts>
					</Frame>
					<CheckButton name="$parentHideTooltipHints" parentKey="hideTooltipHints" inherits="UICheckButtonTemplate" text="Hide tooltip hints">
						<Size>
							<AbsDimension x="25" y="25"/>
						</Size>
						<Anchors>
							<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentShowIdealGemStats"/>
							<Anchor point="LEFT">
								<Offset>
									<AbsDimension x="5"/>
								</Offset>
							</Anchor>
						</Anchors>
						<Scripts>
							<OnClick>
								if self:GetChecked() then
									ww_vars.options.tooltip.hideHints = true
								else
									ww_vars.options.tooltip.hideHints = false
								end
							</OnClick>
							<OnEnter>
								GameTooltip:SetOwner(self,"ANCHOR_RIGHT")
								GameTooltip:AddLine("Hides modifier key hints in tooltips", 1, 1, 1)
								GameTooltip:Show()
							</OnEnter>
							<OnLeave>
								GameTooltip:Hide()
							</OnLeave>
							<OnLoad>
								getglobal(self:GetName() .. "Text"):SetText(self:GetText())
							</OnLoad>
							<OnShow>
								self:SetChecked(ww_vars.options.tooltip.hideHints)
							</OnShow>
						</Scripts>
					</CheckButton>
					<Frame name="$parentShowClassNames" parentKey="showClassNames" inherits="ww_labeledElement">
						<Anchors>
							<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentHideTooltipHints"/>
						</Anchors>
						<Size>
							<AbsDimension y="45"/>
						</Size>
						<Frames>
							<Button name="$parentDropdown" parentKey="dropdown" inherits="UIDropDownMenuTemplate">
								<Anchors>
									<Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" relativeTo="$parentLabel">
										<Offset>
											<AbsDimension x="-15" y="-3"/>
										</Offset>
									</Anchor>
								</Anchors>
								<Scripts>
									<OnLoad>
										UIDropDownMenu_JustifyText(self, "LEFT")
									</OnLoad>
									<OnShow>
										UIDropDownMenu_Initialize(self, ShowClassNameDropDownInitialize)
										UIDropDownMenu_SetSelectedValue(self, ww_vars.options.tooltip.showClassNames)
									</OnShow>
								</Scripts>
							</Button>
						</Frames>
						<Scripts>
							<OnLoad>
								self.label:SetText("Show class names:")
							</OnLoad>
						</Scripts>
					</Frame>
					<CheckButton name="$parentShowDifference" parentKey="showDifference" inherits="UICheckButtonTemplate" text="Show differences to current gear">
						<Size>
							<AbsDimension x="25" y="25"/>
						</Size>
						<Anchors>
							<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentShowClassNames"/>
							<Anchor point="LEFT">
								<Offset>
									<AbsDimension x="5"/>
								</Offset>
							</Anchor>
						</Anchors>
						<Scripts>
							<OnClick>
								if self:GetChecked() then
									ww_vars.options.tooltip.showDifferences = true
								else
									ww_vars.options.tooltip.showDifferences = false
								end
							</OnClick>
							<OnEnter>
								GameTooltip:SetOwner(self,"ANCHOR_RIGHT")
								GameTooltip:AddLine("Shows the change in score compared to the currently equipped gear", 1, 1, 1)
								GameTooltip:Show()
							</OnEnter>
							<OnLeave>
								GameTooltip:Hide()
							</OnLeave>
							<OnLoad>
								getglobal(self:GetName() .. "Text"):SetText(self:GetText())
							</OnLoad>
							<OnShow>
								self:SetChecked(ww_vars.options.tooltip.showDifferences)
							</OnShow>
						</Scripts>
					</CheckButton>
				</Frames>
			</Frame>
		</Frames>
		<Scripts>
			<OnLoad>
				table.insert(UISpecialFrames, self:GetName());
			</OnLoad>
		</Scripts>
	</Frame>
</Ui>
